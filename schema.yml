openapi: 3.0.3
info:
  title: College Registration App
  version: 1.0.0
  description: A simple student and course enrollment api
paths:
  /api/token/:
    post:
      operationId: api_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/token/refresh/:
    post:
      operationId: api_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /courses/:
    get:
      operationId: courses_list
      tags:
      - courses
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course'
          description: ''
    post:
      operationId: courses_create
      tags:
      - courses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Course'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Course'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
          description: ''
  /courses/{id}/:
    get:
      operationId: courses_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - courses
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
          description: ''
    put:
      operationId: courses_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - courses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Course'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Course'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
          description: ''
    patch:
      operationId: courses_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - courses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCourse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCourse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCourse'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
          description: ''
    delete:
      operationId: courses_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - courses
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /enrollment/:
    get:
      operationId: enrollment_list
      tags:
      - enrollment
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Enrollment'
          description: ''
  /enrollment/{id}/:
    get:
      operationId: enrollment_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - enrollment
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Enrollment'
          description: ''
  /students/:
    get:
      operationId: students_list
      tags:
      - students
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
          description: ''
    post:
      operationId: students_create
      tags:
      - students
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Student'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Student'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
          description: ''
components:
  schemas:
    BlankEnum:
      enum:
      - ''
    Course:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        course_code:
          type: string
          maxLength: 50
        title:
          type: string
        credits:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        instructor:
          type: string
          maxLength: 250
      required:
      - course_code
      - credits
      - id
      - instructor
      - title
    Enrollment:
      type: object
      properties:
        student:
          type: string
          format: uuid
        course:
          type: integer
        grade:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/GradeEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        enrolled:
          type: string
          format: date
          readOnly: true
      required:
      - course
      - enrolled
      - student
    GradeEnum:
      enum:
      - A
      - B
      - C
      - D
      - E
      type: string
      description: |-
        * `A` - A
        * `B` - B
        * `C` - C
        * `D` - D
        * `E` - E
    NullEnum:
      enum:
      - null
    PatchedCourse:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        course_code:
          type: string
          maxLength: 50
        title:
          type: string
        credits:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        instructor:
          type: string
          maxLength: 250
    Student:
      type: object
      properties:
        student_id:
          type: string
          format: uuid
        full_name:
          type: string
          maxLength: 250
        email:
          type: string
          format: email
          maxLength: 254
        enrollment_date:
          type: string
          format: date
          readOnly: true
      required:
      - email
      - enrollment_date
      - full_name
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
